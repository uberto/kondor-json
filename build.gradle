plugins {
    id "org.jetbrains.kotlin.jvm" version  "${kotlin_version}"
    id "java-library"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}


publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java

            pom {
                name = 'kondor'
                description = 'A Kotlin library to use Json in functional way without reflection'
                url = 'https://github.com/uberto/kondor-json'
                inceptionYear = '2021'

                scm {
                    url = 'https://github.com/uberto/kondor-json'
                    connection = 'https://github.com/uberto/kondor-json.git'
                    developerConnection = 'git@github.com:uberto/kondor-json.git'
                }
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'UbertoBarbini'
                        name = 'Uberto Barbini'
                        email = 'uberto.gama@gmail.com'
                    }
                }
            }
        }
    }
}

allprojects{

    group 'com.ubertob.kondor'
    version '1.7.0-test'

    wrapper {
        gradleVersion = "6.8.3"
    }

    repositories {
        mavenCentral()
    }

}

subprojects {

    ext {
        junitVersion = "5.7.1"
        junitLauncherVersion = "1.7.1"
        striktVersion = "0.31.0"
    }

    test {
        useJUnitPlatform()
//        testLogging.showStandardStreams = true
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
//            freeCompilerArgs = ['-Xjvm-default=all']
        }
    }

}

task printVersion {
    doLast {
        println project.version
    }
}



nexusPublishing {
    repositories {
        sonatype()
    }
}